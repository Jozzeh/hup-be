{"openapi":"3.0.0","info":{"title":"Hups swagger docs","version":"1.0.0","description":"The swagger docs of the hup application"},"paths":{"/api/v1/categories":{"get":{"tags":["Categories"],"operationId":"CategoriesController.index","summary":"Get all categories (Authenticated)","description":"Gets all categories... User needs to be authenticated. Admin retrieve all categories, user only his/her company categories.","responses":{"200":{"description":"Returns all categories in an array","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Category"}}}}},"401":{"description":"Unauthorized"}}},"post":{"tags":["Categories"],"operationId":"CategoriesController.insert","summary":"Create new category (Authenticated)","description":"Create new category... User needs to be authenticated.","requestBody":{"content":{"application/json":{"schema":{"required":["name"],"type":"object","properties":{"name":{"type":"string"},"company_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Returns the save category","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Category"}}}},"401":{"description":"Unauthorized"}}}},"/api/v1/categories/{id}":{"get":{"tags":["Categories"],"operationId":"CategoriesController.single","summary":"Get a category (Authenticated)","description":"Gets a category with all its links... User needs to be authenticated. Admin can retrieve all categories, User only from his/her company","parameters":[{"name":"id","description":"category id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a category and its links","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category","properties":{"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}}}}},"401":{"description":"Unauthorized"}}},"put":{"tags":["Categories"],"operationId":"CategoriesController.update","summary":"Update a category by id (Authenticated)","description":"Updates a category and returns. Admin can update all categories, User only from his/her company","parameters":[{"name":"id","description":"category id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"required":["name"],"type":"object","properties":{"name":{"type":"string"},"company_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Returns the updated category","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},"401":{"description":"Unauthorized"}}},"delete":{"tags":["Categories"],"operationId":"CategoriesController.delete","summary":"Soft delete a category by id (Authenticated)","description":"Sof deteles a category and returns no content. Admin can delete all categories, User only from his/her company","parameters":[{"name":"id","description":"category id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Soft delete ok"},"401":{"description":"Unauthorized"}}}},"/api/v1/companies":{"get":{"tags":["Companies"],"operationId":"CompaniesController.index","summary":"Get all companies (Only admin)","description":"Gets all companies... User needs to be authenticated and have Admin role.","responses":{"200":{"description":"Returns all companies in an array","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Company"}}}}},"401":{"description":"Unauthorized"}}},"post":{"tags":["Companies"],"operationId":"CompaniesController.insert","summary":"Create new company (Only admin)","description":"Create new company... User needs to be authenticated and have Admin role.","requestBody":{"content":{"application/json":{"schema":{"required":["name"],"type":"object","properties":{"name":{"type":"string"}}}}}},"responses":{"200":{"description":"Returns saved category","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Company"}}}},"401":{"description":"Unauthorized"}}}},"/api/v1/companies/{id}":{"get":{"tags":["Companies"],"operationId":"CompaniesController.single","summary":"Get a company (Only admin)","description":"Gets a company with all its users... User needs to be authenticated and have Admin role.","parameters":[{"name":"id","description":"company id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a company and its users","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Company","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}}}},"401":{"description":"Unauthorized"}}},"put":{"tags":["Companies"],"operationId":"CompaniesController.update","summary":"Update a company by id (Only admin)","description":"Updates a company and returns... User needs to be authenticated and have Admin role.","parameters":[{"name":"id","description":"user id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the updated company","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Company"}}}},"401":{"description":"Unauthorized"}}}},"/api/v1/categories/{categoryId}/links":{"get":{"tags":["Links"],"operationId":"LinksController.index","summary":"Get all links (Not authenticated)","description":"Gets all links... User needs to be authenticated. Admin retrieve all links, user only his/her company links.","parameters":[{"name":"categoryId","description":"category id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns all links in an array","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}}},"401":{"description":"Unauthorized"}}},"post":{"tags":["Links"],"operationId":"LinksController.insert","summary":"Create new category (Authenticated)","description":"Create new category... User needs to be authenticated.","parameters":[{"name":"categoryId","description":"category id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"required":["name","link"],"type":"object","properties":{"name":{"type":"string"},"link":{"type":"string"},"active":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Returns the save category","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/Link"}}}},"401":{"description":"Unauthorized"}}}},"/api/v1/categories/{categoryId}/links/{id}":{"get":{"tags":["Links"],"operationId":"LinksController.single","summary":"Get a category (Not authenticated)","description":"Gets a category with all its links... User needs to be authenticated. Admin can retrieve all links, User only from his/her company","parameters":[{"name":"categoryId","description":"category id","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","description":"link id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the links of a category","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Link"}}}},"401":{"description":"Unauthorized"}}},"put":{"tags":["Links"],"operationId":"LinksController.update","summary":"Update a category by id (Authenticated)","description":"Updates a category and returns. Admin can update all links, User only from his/her company","parameters":[{"name":"categoryId","description":"category id","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","description":"link id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"required":["name","link"],"type":"object","properties":{"name":{"type":"string"},"link":{"type":"string"},"active":{"type":"boolean"}}}}}},"responses":{"200":{"description":"Returns the updated category","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Link"}}}},"401":{"description":"Unauthorized"}}},"delete":{"tags":["Links"],"operationId":"LinksController.delete","summary":"Soft delete a link by id (Authenticated)","description":"Sof deteles a link and returns no content. Admin can delete all links, User only from his/her company","parameters":[{"name":"categoryId","description":"category id","in":"path","required":true,"schema":{"type":"string"}},{"name":"id","description":"link id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Soft delete ok"},"401":{"description":"Unauthorized"}}}},"/api/v1/login":{"post":{"tags":["Login"],"operationId":"LoginController.login","summary":"Login user","description":"Log a user in by email and password.","requestBody":{"content":{"application/json":{"schema":{"required":["email","password"],"type":"object","properties":{"email":{"type":"string","format":"email"},"password":{"type":"string"},"rememberme":{"type":"integer"}}}}}},"responses":{"200":{"description":"Returns an object with a type, token and expire (if rememberme is 1)","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string"},"token":{"type":"string"},"expiresIn":{"type":"string","format":"datetime"}}}}}},"404":{"description":"Not found"}}}},"/api/v1/logout":{"post":{"tags":["Login"],"summary":"User logout","description":"User is logged out. No content returned.","operationId":"LoginController.logout","responses":{"204":{"description":"User logged out"}}}},"/api/v1/reset":{"post":{"tags":["Login"],"operationId":"LoginController.resetPassword","summary":"Update/save the password of a user","description":"Update/save the password of a user. one_time_key should be added and should be valid.","requestBody":{"content":{"application/json":{"schema":{"required":["one_time_key","password"],"type":"object","properties":{"one_time_key":{"type":"string"},"password":{"type":"string"}}}}}},"responses":{"204":{"description":"No content"},"404":{"description":"Bad request"}}}},"/api/v1/forgot":{"post":{"tags":["Login"],"operationId":"LoginController.forgotPassword","summary":"Sets a one_time_key to reset the password of a user.","description":"Sets a one_time_key to reset the password of a user. Needs a valid email (email sent with one_time_key in it).","requestBody":{"content":{"application/json":{"schema":{"required":["email"],"type":"object","properties":{"email":{"type":"string","format":"email"}}}}},"required":true},"responses":{"204":{"description":"No content"}}}},"/api/v1/roles":{"get":{"tags":["Roles"],"operationId":"RolesController.index","summary":"Get all roles (Only authenticated)","description":"Gets all roles... User needs to be authenticated.","responses":{"200":{"description":"Returns all roles in an array","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Role"}}}}},"401":{"description":"Unauthorized"}}}},"/api/v1/users":{"get":{"tags":["Users"],"operationId":"UsersController.index","summary":"Get all users","description":"Gets all users... User needs to be authenticated and have Admin role.","responses":{"200":{"description":"Returns all users in an array","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"401":{"description":"Unauthorized"}}},"post":{"tags":["Users"],"summary":"Create a new user","description":"Creates a new user with basic information. Returns created user with id","operationId":"UsersController.insert","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInsert"}}},"required":true},"responses":{"200":{"description":"When the user has been created","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}},"400":{"description":"When there are validation errors"},"404":{"description":"When the user is not found"},"422":{"description":"When role id or company id does not match any id in the corresponding tables"},"500":{"description":"Internal Server Error"}}}},"/api/v1/users/{id}":{"get":{"tags":["Users"],"operationId":"UsersController.single","summary":"Get a users by id","description":"Gets a user by id... User needs to be authenticated and have Admin role.","parameters":[{"name":"id","description":"user id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the user in an object","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User","properties":{"company":{"type":"object","$ref":"#/components/schemas/Company"},"role":{"type":"object","$ref":"#/components/schemas/Role"}}}}}},"401":{"description":"Unauthorized"}}},"put":{"tags":["Users"],"operationId":"UsersController.update","summary":"Update a users by id","description":"Updates a user by id... User needs to be authenticated. Admin can update all, non-admin can update itself.","parameters":[{"name":"id","description":"user id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Returns the saved user in an object","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User"}}}},"401":{"description":"Unauthorized"},"404":{"description":"Bad request"}}},"delete":{"tags":["Users"],"operationId":"UsersController.delete","summary":"Delete a users by id","description":"Delete a user by id... User needs to be authenticated and have Admin role.","parameters":[{"name":"id","description":"user id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Empty response on success"},"401":{"description":"Unauthorized"}}}},"/api/v1/users/myprofile":{"get":{"tags":["Users"],"operationId":"UsersController.myprofile","summary":"Get current logged in user","description":"Gets current logged in user with its role and company... User needs to be authenticated.","responses":{"200":{"description":"Returns logged in user","content":{"application/json":{"schema":{"type":"object","$ref":"#/components/schemas/User","properties":{"company":{"type":"object","$ref":"#/components/schemas/Company"},"role":{"type":"object","$ref":"#/components/schemas/Role"}}}}}},"401":{"description":"Unauthorized"}}}}},"components":{"schemas":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"company_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"},"created_by":{"type":"integer","format":"int32"},"updated_by":{"type":"integer","format":"int32"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}},"Company":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}},"Link":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"link":{"type":"string"},"category_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"},"created_by":{"type":"integer","format":"int32"},"updated_by":{"type":"integer","format":"int32"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}},"Role":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"}}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"name":{"type":"string"},"email":{"type":"string","format":"email"},"company_id":{"type":"integer","format":"int32"},"role_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"},"created_at":{"type":"string","format":"date-time"},"updated_at":{"type":"string","format":"date-time"}}},"UserInsert":{"required":["name","email","company_id"],"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"company_id":{"type":"integer","format":"int32"},"role_id":{"type":"integer","format":"int32"}}},"UserUpdate":{"required":["name","company_id","role_id","active"],"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"company_id":{"type":"integer","format":"int32"},"role_id":{"type":"integer","format":"int32"},"active":{"type":"boolean"}}}}},"tags":[]}